model Marriage

class Clock
attributes
    NOW : Integer
operations
    tick()
        begin
            self.NOW := self.NOW + 1;
        end
        post checkTick: self.NOW@pre + 1 = self.NOW;

    run(n : Integer)
        begin
            for i in Sequence{1..n}
                do self.tick();
            end
        end
        pre enteroPositivo: n <> null and n > 0
        post comprobar: self.NOW@pre + n = self.NOW
end

class Community
end

class Person
    attributes
        birthYear : Integer
        deathYear : Integer
        age : Integer
        isDead : Boolean derive: not self.deathYear.oclIsUndefined()
end
composition CommunityPerson between
    Community [1] role community
    Person [*] role person
end
class Marriage
    attributes
        startYear : Integer
        endYear : Integer
end

aggregation CommunityClock between
    Community [*] role community    
    Clock [1] role clock
end
    
association WifeHusband between
    Person [1] role wife
    Marriage [*] role husband
end

association HusbandWife between
    Person [1] role husband
    Marriage [*] role wife
end
